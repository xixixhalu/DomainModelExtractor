@startuml
hide circle
class LanguageLearner {
	LanguageLearners
	Teacher
	Matches
	LanguageAssignments
	SearchResults
	order()
	chat()
	finish()
	search()
	easier()
	find()
	exchange()
	learning()
	so()
	want()
	use()
	practice()
	make()
	having()
	prioritize()
	know()
	learn()
	do()
	get()
}
class Website {
	register
	"WebsiteOwner/mediator"
	give
	modify
	do
	promote()
}
class LanguageTeacher {
	give()
}
class People {
	pull()
}
class WebsiteOwner {
	"WebsiteOwner/mediator"
	view()
	promote()
	maintain()
	post()
	subscribe()
	send()
	generate()
	assess()
	make()
	inform()
	monitor()
	suggest()
	add()
}
class Student {
	PrivacyPolicy
	modify()
	avoid()
	register()
}
class better {
	other
	know()
}
class blog {
	post
}
class OnlineExperience {
	get()
}
class members {
	AND
	other
	RateInteractions()
}
class WebsiteUser {
	NativeLanguageSkills
	are()
	able()
	operated()
	avoid()
	find()
	pull()
	receive()
	offer()
	want()
	report()
	practice()
	get()
}
class Students {
	LanguageLevel
	increase()
	help()
}
class Help {
}
class me {
	solve()
}
class NativeSpeaker {
	NativeSpeakers
	know()
	find()
	solve()
	use()
	help()
}
class member {
}
class Language {
	LanguageProficiency
	LanguageLearners
	LanguageAssignments
	LanguageLevel
	practice()
	want()
	learn()
}
class HelpStudent {
	evaluate()
	adjust()
}
class NativeSpeakerLanguageLearner {
	know()
	learn()
	find()
	talk()
	use()
}
class Assignment {
	easier()
}
class WebsiteOwner/professor {
	offer()
	advise()
}
Student o-- Students
Language o-- LanguageLearner
blog o-- Website
OnlineExperience o-- better
Language o-- LanguageTeacher
Help o-- HelpStudent
me o-- members
People o-- Help
WebsiteOwner o-- "WebsiteOwner/professor"
LanguageLearner o-- Language
WebsiteOwner o-- Website
LanguageLearner o-- Assignment
LanguageTeacher o-- Students
Website o-- "WebsiteOwner/professor"
Website o-- WebsiteUser
Website o-- WebsiteOwner
member o-- members
NativeSpeaker o-- NativeSpeakerLanguageLearner
me o-- member

@enduml