User can search for Courses locally based on : Location , Category , Price , Date , keyword .
CourseAttendee can see the ScheduleOfTraining and it based on CourseName , Trainer , Location , DateRange for a ParticularCourse .
User can request a Course that is not on Calendar .
User can filter by Rating and Reviews .
CourseAttendee can compare the Prices and decide based on Price .
Trainer can offer Courses in SpecificLocations .
Trainer can put Trainer's CalendarOfAvailability so Admin can schedule a Course .
Trainer can see the Rating and reviews to continue to improve myself and the Course .
Trainer can compare Trainer's Prices to maximize .
User can see the VarietyOfCourses available by Category and most popular .
User can see which Trainer and Courses are rated highest ( Sort ) .
Enterprise can compare PricesOfCourses to see if Enterprise 'm getting a GoodValue .
Administrator can receive AccountRegistrationInformation from the Trainers .
Administrator can create , delete and inquiry Courses as well as update CoursesInformation such as Dates and Times .
Administrator can see which courses and which Trainers are profitable .
Administrator can adjust the RatingOfCoursesAndTrainers .
Administrator can receive the Request from Trainers about which Course to offer and when the Courses start and verify them .
Administrator will have a Dashboard to display Notifications similar to DatabaseFunctions.I can receive any ChangesOfUpdate .
User will be able to request to modify User's previously registered Course .
User can setup an Account .
User will be able to request to cancel User's Registration .
User can register for a Course after logging in to the System .
User can share the Courses through Facebook , Twitter , Linkedin and Email .
User would be able to see MinimumNumberOfPeople registered for the Courses .
Trainer can set the Minimum , MaximumNoOfAttendees and Price per Attendees .
Admin can see how ManyUsers are registered for the Courses and see if Admin met the Minimum . If Admin did n't , Admin would be able to cancel the Course or adjust the MinimumNumberOf the Course .
Admin can move People to a DifferentClass .
CourseAttendee will receive the ConfirmationEmail after registering for the Course .
all UserRequirements should be analyzed and Feasibility-LRB-AsWellAsScope-RRB-OfEach should be determined .
All Success-criticalStakeholders should agree upon Win-winCondition , and there is TeamCohesion for the Product .
all SpecificRequirements , Documents , and Reports are maintained ; and Meetings as well as Session are noted down .
Developer would be able to analyze each and every Requirement and understand their Feasibility and Architecture behind them .
SpecificTraining should be provided to all team members for the DevelopmentAndUseOf the Product .
Admin can adjust the NumberOfAttendees following Notification from Eventbrite .
The System should be robust enough to support MultipleUsers at the SameTime .
The System must be user friendly for NonExpert .
CourseAttendee can Rate and Review the Course CourseAttendee attended .
CourseAttendee could pay for the Course through Eventbrite .
Trainer would be able to attach OneOf the Options to Trainer's Profile : ActiveDuty , Veteran , MilitaryFamily .
Admin would be able to attach OneOf the Options to Trainers ' Profile : ActiveDuty , Veteran , MilitaryFamily .
