User can learn Information about the Company and Software that is clearly presented and provides a GoodUnderstandingOf the Platform ` sCapabilities by visiting the Website .
User can sign up with a Username and Password ( or with CommonLogins like Google and Facebook ) to be either a Student or a Tutor for a SpecificLanguage , so that User can use the Application with User's Profile to log in with Linkedin , Google , Wechat .
User can input User's preferred Schedule .
Tutor can accept TutoringRequests in Accordance with Tutor's Availability .
Student can request a SpecificTutoringTime with Student's Tutor .
Tutor can share PresentationMaterials , to include Powerpoint and Videos , with Tutor's Students .
( after ProjectHandoff ) FutureMaintainer/developer can easily understand the Technologies used to create the Platform via ThoroughDocumentation and through the UseOfCommon , WellEstablished/supportedTechnologies .
Maintainer can manage the InformationOfTutorsAndCourses displayed on AdminPage .
Student can read DescriptionsOfTutors in their Pages , including their BasicInformation and Lessons given by them .
Student can watch LessonVideos at any TimeOnline ( free and paid ) .
Tutor can post Blogs on the Website .
the Company , LeaderOf can learn StatisticalInformation including LessonsViews , Lessons-sales , UserAmount , etc. . .
User can consult Information about all Tutors .
User can learn about what ProgramELA can provide and what Key feature they have before User Request tutoring .
User can check User's RequestRecord and the Schedule .
User can get the Notification in Time when ScheduleChanges or Something else happens .
Tutor can get a ReasonableSchedule , not schedule Classes OutsideOfMyExpectedWorkingHours .
User can choose DifferentPaymentMethods .
User can navigate the Website easily .
Tutor can offer Tutor's DetailedInformation such as Education , Experience , SubjectExpertise , Availability , etc ( by submitting Form ) .
Maintainer can upgrade the Resources such as Courses ' Materials , Exercises , Videos , etc. . .
Tester can easily write some IntegrationTest on the Project .
Programmer can get a ClearDescriptionOf the Requirements from the Client .
FeasibilityAnalysist can figure out all the PossibilitiesOfTools that fit our Project .
User can communicate with the CustomerService when User have some Questions .
User can find our Website through Google.com easily .
ProjectArchitect can get ManyDetailsOfEveryModule in the Project .
Client will have a Project with all BasicFunctions completed at the EndOf the Schedule .
Tutor can update the CourseVideo easily .
User can exchange Thoughts with Classmates via Comments .
Programmer can prioritize each Task given by Client .
User have MultipleCourseScheduleChoices .
User can catch up with the StudyProcess through replaying Videos .
SystemArchitect can integrate each Module without Confliction .
User need to be able to log in to access FurtherInformation on User's LearningProgress .
User need the PaymentMethod to work to purchase a Class .
User need to be able to find User's IdealTutor through the Info User provided .
User need to be able to schedule Time with the Tutor User choose .
User need to be able to view the VideosOfClasses .
and a Tutor , User need to be able to use Live-streamingFeature for One-on-oneClasses .
Student am able to coomplete a RequestForm .
User can get an AutoResponse in Email after submitting the Request .
Student can complete an EvaluationForm .
StudentUser can be paired with an Instructor who matches StudentUser's Language and Schedule if available .
Tutor can input Tutor's ScheduleAvailability into the System .
Tutor's Availability will reflect the Fact that Tutor am now booked .
Student can cancel or re-schedule tutoring Time within a SpecificTimeWindow .
Student can read Blogs and make a Comment .
