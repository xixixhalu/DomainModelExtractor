@startuml
hide circle
class Coach<actor> {
}
class GM<actor> {
	data
}
class SporTechBIContractor<actor> {
}
class Manger<actor> {
}
class Customer<actor> {
	model
}
class SoccerCoach<actor> {
}
class Reaction {
}
class Demand {
}
class SporTechBI {
}
class Contractor {
	revise()
	update()
	add()
}
class System {
	launch()
}
class Player {
}
class Value {
}
class Decision {
	affect()
}
class Line {
}
class Customer {
	add()
	update()
	see()
	drag()
	import()
	drop()
}
class Change {
}
class Data {
	integrate()
}
class GM {
	visualize()
	extract()
	build()
	make()
}
class SoccerCoach {
	specify()
	configure()
}
class Schedule {
}
class Manner {
}
class Facebook {
	feed()
}
class Roster {
}
class Field {
	capture()
}
class Manger {
	monitor()
}
class Instagram {
	feed()
}
class Crawler {
	run()
}
class Coach {
	visualize()
	extract()
	build()
	make()
}
class Season {
	progress()
}
class Twitter {
	feed()
}
class Model {
}
class SporTechBIContractor {
}
class Condition {
}
Data --> Model : to
Decision --> Line : affect
GM --> Value : extract
Instagram o-- Reaction
SporTechBIContractor <|-- Contractor
Customer --> Change : see
Manger --> Reaction : monitor
Player o-- Value
Contractor --> Data : revise
Twitter o-- Reaction
GM o-- Data : extract
Coach --> Value : extract
SporTechBI o-- System
Manger --> Condition : supported_by
Contractor --> Data : update
Instagram --> Demand : feed
Manner o-- Demand
SoccerCoach --> Schedule : configure
Twitter --> Demand : feed
Coach --> Decision : make
Customer --> Data : add
GM --> Decision : make
Manger --> Demand : monitor
Data --> Manner : integrate
Coach --> Value : visualize
Customer --> Data : import
Coach --> Roster : build
Customer --> Data : update
SporTechBI o-- Contractor
Facebook --> Demand : feed
Data --> System : supported_by
GM --> Value : visualize
Player o-- Data
GM --> Roster : build
Facebook o-- Reaction

@enduml