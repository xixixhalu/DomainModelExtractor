@startuml
hide circle
class Coach<actor> {
}
class GM<actor> {
	data
}
class SporTechBIContractor<actor> {
}
class Manger<actor> {
}
class Customer<actor> {
	model
}
class SoccerCoach<actor> {
}
class Demand {
}
class Reaction {
}
class Player {
}
class Value {
}
class SporTechBI {
}
class Contractor {
	revise()
	update()
	add()
}
class System {
	launch()
}
class Twitter {
	feed()
}
class Coach {
	extract()
	make()
	visualize()
	build()
}
class Instagram {
	feed()
}
class Roster {
}
class Field {
	capture()
}
class Customer {
	update()
	drag()
	drop()
	see()
	import()
	add()
}
class Data {
	integrate()
}
class SoccerCoach {
	specify()
	configure()
}
class Schedule {
}
class Decision {
	affect()
}
class GM {
	extract()
	make()
	visualize()
	build()
}
class Crawler {
	run()
}
class Manger {
	monitor()
}
class Facebook {
	feed()
}
class Season {
	progress()
}
class Manner {
}
class Line {
}
class Change {
}
class SporTechBIContractor {
}
class Model {
}
class Condition {
}
SporTechBI o-- System
Coach --> Value : visualize
Data --> Model : to
Coach --> Value : extract
GM --> Value : visualize
Player o-- Value
Instagram --> Demand : feed
Manger --> Demand : monitor
Facebook o-- Reaction
Coach --> Roster : build
Manger --> Reaction : monitor
Data --> System : supported_by
Instagram o-- Reaction
Contractor --> Data : revise
Player o-- Data
Facebook --> Demand : feed
Manger --> Condition : supported_by
Customer --> Data : add
Customer --> Data : import
Twitter --> Demand : feed
SporTechBI o-- Contractor
Data --> Manner : integrate
GM --> Value : extract
SoccerCoach --> Schedule : configure
Decision --> Line : affect
Coach --> Decision : make
Customer --> Change : see
GM --> Roster : build
Contractor --> Data : update
Manner o-- Demand
Customer --> Data : update
SporTechBIContractor <|-- Contractor
GM o-- Data : extract
GM --> Decision : make
Twitter o-- Reaction

@enduml