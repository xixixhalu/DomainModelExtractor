@startuml
hide circle
class Driver<actor> {
	creditCardInformation
	valet
	profile
	vehicle
	phone
}
class Establishment<actor> {
}
class Customer<actor> {
	ticketNumber
	car
}
class ValetOperator<actor> {
	company
	login
	profile
}
class ValetHead<actor> {
}
class User<actor> {
}
class ValetCompany {
	revenue
	profile
	receive()
	control()
	accept()
	offer()
}
class Driver {
	use()
	create()
	check()
	have()
	wait()
	want()
	request()
	pay()
	message()
}
class ValetOperator {
	see()
	retrieve()
	have()
	receive()
	add()
	service()
	send()
	track()
	know()
}
class User {
	register()
	include()
}
class Information {
}
class Notification {
}
class Location {
	service()
}
class Valet {
	retrieve()
}
class Paymentoption {
}
class ValetHead {
	set()
	adjust()
}
class ValetPrice {
}
class Employee {
	work()
}
class Establishment {
	send()
	attract()
}
class SnapValetUser {
}
class Shift {
}
class Customer {
	have()
	wait()
	request()
	pay()
	enter()
}
class Revenue {
}
class TicketNumber {
}
class Option {
}
class Car {
}
class Activity {
}
class Company {
}
class Advertisement {
}
class Payment {
}
class Transaction {
}
class EmailTransactionSummaryReport {
}
class Timerequest {
}
class Profile {
}
class Account {
}
class Manner {
}
class Pricing {
}
class Login {
}
ValetOperator --> Timerequest : receive
Driver o-- Valet : message
Employee --> Location : work
Customer o-- Car : request
ValetCompany --> Paymentoption : offer
Driver o-- Profile : create
Driver o-- Valet : pay
ValetOperator --> Car : send
ValetCompany --> ValetCompany : accept
Establishment --> Customer : attract
ValetHead --> ValetPrice : set
User --> Account : register
Driver --> Activity : use
ValetOperator --> Employee : add
ValetOperator --> Manner : retrieve
Location --> Company : service
ValetHead --> Pricing : adjust
ValetCompany --> Shift : receive
Establishment --> SnapValetUser : send
ValetOperator --> Car : retrieve
Establishment --> Advertisement : send
ValetHead --> Shift : set
ValetCompany --> Payment : accept
ValetOperator o-- Login : have
ValetOperator --> Customer : send
ValetOperator --> Transaction : track
Driver --> Option : have
ValetOperator --> Location : track
User --> Information : include
ValetCompany --> EmailTransactionSummaryReport : receive
ValetCompany o-- Revenue : control
ValetOperator --> Customer : receive
Customer o-- TicketNumber : enter
ValetOperator --> Notification : send

@enduml