@startuml
hide circle
class Consumer<actor> {
	orderhistory
	order
	experience
	option
	need
}
class Florist<actor> {
	service
	orderhistory
	transaction
}
class Customer<actor> {
}
class Consumer {
	chat()
	have()
	want()
	share()
	view()
	schedule()
	cancel()
	talk()
	make()
	receive()
	search()
	get()
	place()
	review()
	track()
	check()
	buy()
	rank()
}
class Florist {
	market()
	have()
	cancel()
	create()
	receive()
	use()
	track()
	provide()
	upload()
}
class MarketAnalyticTool {
}
class Ranking {
}
class Market {
}
class ProductStatus {
	confirm()
}
class RefundConsumer {
}
class Payment {
}
class Customer {
	create()
	receive()
}
class Recommendation {
}
class Convenience {
}
class Order {
}
class Record {
}
class FlowerSeeker {
}
class Profile {
}
class Orderhistory {
}
class Experience {
}
class Appointment {
}
class Catalog {
}
class Need {
}
class Shoppingexperience {
}
class Delivery {
}
class Service {
}
class Product {
}
class Pickup {
}
class Option {
}
class Purchasingdecision {
}
class Review {
}
class Information {
}
class Event {
}
Florist --> RefundConsumer : cancel
Consumer --> Product : search
Consumer o-- Order : cancel
Florist --> Payment : receive
Consumer --> Pickup : place
Customer --> Profile : create
Consumer --> Florist : schedule
Consumer --> Florist : place
Consumer --> Consumer : view
Consumer o-- Option : search
Consumer --> Appointment : schedule
Florist --> MarketAnalyticTool : use
Florist --> Record : have
Consumer --> Purchasingdecision : make
Florist --> Catalog : upload
Consumer o-- Order : track
Customer --> Recommendation : receive
Consumer --> Product : rank
Consumer o-- Order : place
Florist --> Florist : upload
Consumer --> Convenience : have
Consumer --> Review : view
Florist o-- Orderhistory : track
Florist o-- Service : market
Florist --> FlowerSeeker : create
Consumer --> Florist : chat
Florist o-- Order : cancel
Consumer --> Information : receive
Consumer o-- Need : search
Consumer --> Record : have
Consumer o-- Experience : share
Consumer --> Event : talk
Consumer --> Shoppingexperience : have
Consumer --> Experience : supported_by
Consumer --> Ranking : view
Consumer --> Florist : supported_by
Customer --> FlowerSeeker : create
Florist --> Market : use
Consumer --> Delivery : place
Florist --> Profile : create
Consumer o-- Orderhistory : check
Florist --> ProductStatus : provide

@enduml