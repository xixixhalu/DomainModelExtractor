@startuml
hide circle
class Consumer<actor> {
	order
	experience
	occasion
	orderHistory
}
class Florist<actor> {
	pastTransaction
	service
	orderHistory
}
class Customer<actor> {
}
class History {
}
class Status {
}
class Florist {
	provide()
	confirm()
	cancel()
	track()
	create()
	upload()
	receive()
	market()
	use()
	have()
}
class Catalog {
}
class Consumer {
	check()
	schedule()
	get()
	buy()
	view()
	rank()
	cancel()
	place()
	review()
	track()
	search()
	want()
	deliver()
	receive()
	talk()
	make()
	have()
}
class Review {
}
class Record {
}
class Order {
}
class Customer {
	receive()
	create()
}
class Profile {
}
class Appointment {
}
class Decision {
}
class Refundconsumer {
}
class Ranking {
}
class MarketAnalyticTool {
}
class Event {
}
class Shoppingexperience {
}
class Information {
}
class Service {
}
class Option {
}
class FlowerSeeker {
}
class Convenience {
}
class Payment {
}
class Recommendation {
}
class Product {
}
class Experience {
}
Consumer --> Product : rank
Consumer --> Record : have
Consumer --> Florist : supported_by
Florist --> Record : have
Product o-- Status
Consumer o-- Order : place
Customer --> Profile : create
Florist --> History : track
Consumer o-- Order : track
Florist o-- Order : cancel
Order o-- History
Florist o-- Order : confirm
Florist o-- Service : market
Consumer --> Appointment : schedule
Florist --> Catalog : upload
Consumer --> Option : have
Consumer --> Decision : make
Florist --> FlowerSeeker : create
Florist --> Refundconsumer : cancel
Florist --> Profile : create
Consumer --> History : check
Consumer --> Review : view
Consumer --> Ranking : view
Consumer --> Convenience : have
Customer --> FlowerSeeker : create
Consumer --> Experience : supported_by
Florist --> MarketAnalyticTool : use
Florist --> Status : provide
Florist --> Payment : receive
Consumer --> Event : talk
Customer --> Recommendation : receive
Consumer o-- Order : cancel
Consumer --> Shoppingexperience : have
Consumer --> Information : receive

@enduml