@startuml
hide circle
class User<actor> {
	course
	registration
}
class CourseAttendee<actor> {
}
class Trainer<actor> {
	profile
	price
	calendar
}
class Enterprise<actor> {
}
class Administrator<actor> {
}
class Admin<actor> {
}
class Team<actor> {
}
class Developer<actor> {
}
class Attendee {
	rate()
	pay()
	base()
	compare()
	attend()
	receive()
	decide()
	review()
	see()
}
class RegistrationInformation {
}
class Administrator {
	delete()
	adjust()
	have()
	create()
	receive()
	see()
}
class Admin {
	meet()
	adjust()
	move()
	attach()
	see()
	cancel()
}
class Minimum {
}
class Rating {
	continue()
}
class Price {
	maximize()
	see()
}
class Trainer {
	rate()
	attach()
	compare()
	offer()
	set()
	see()
	put()
}
class User {
	share()
	register()
	setup()
	request()
	search()
	see()
	filter()
}
class Developer {
	understand()
	analyze()
}
class Course {
	start()
	rate()
	offer()
	verify()
}
class Duty {
}
class Requirement {
}
class Enterprise {
	get()
	compare()
}
class Value {
}
class People {
}
class Number {
}
class Dashboard {
}
class Calendar {
}
class Review {
	continue()
}
class Feasibility {
}
class Schedule {
}
class Location {
}
class ConfirmationEmail {
}
class Request {
}
class Account {
}
class Architecture {
}
class Class {
}
class CourseAttendee {
}
Administrator --> Rating : adjust
Administrator --> Request : receive
Admin --> Course : cancel
Attendee --> Schedule : base
Attendee --> Price : compare
Trainer --> Rating : see
User o-- Course : request
User --> Number : see
People --> Class : to
Trainer --> Minimum : set
Admin --> Number : adjust
User --> Account : setup
Administrator --> Dashboard : have
Developer --> Architecture : understand
Trainer o-- Price : compare
Calendar <|-- Course
Trainer --> Duty : attach
Trainer o-- Calendar : put
Account o-- RegistrationInformation
Course o-- Attendee
Developer --> Requirement : analyze
Trainer --> Review : see
CourseAttendee <|-- Attendee
Developer --> Feasibility : understand
Enterprise --> Value : get
Attendee --> ConfirmationEmail : receive
Enterprise --> Price : compare
Attendee --> Schedule : see
Attendee --> Price : decide
Admin --> People : move
Trainer --> Location : offer
User o-- Course : share
Administrator --> RegistrationInformation : receive
Trainer --> Course : offer
Admin --> Minimum : meet

@enduml