@startuml
hide circle
class LanguageLearner<actor> {
	assignment
	match
	searchResult
	languageAssignment
	language
	teacher
}
class English<actor> {
	goal
}
class SpeakerLanguageLearner<actor> {
}
class LanguageTeacher<actor> {
	student
}
class WebsiteOwner<actor> {
	userBase
	website
}
class User<actor> {
}
class Practitioner<actor> {
}
class Student<actor> {
	info
	privacypolicy
}
class WebsiteUser<actor> {
	languageskill
	account
}
class UniversityStudent<actor> {
}
class Tutor<actor> {
}
class Speaker<actor> {
}
class People {
	help
}
class User {
	behavior
	password
	friendList
	chatlog
	add()
	reset()
	subscribe()
	forget()
	review()
	retrieve()
}
class Someone {
	advertisement
}
class Speaker {
	know()
	help()
}
class WebsiteUser {
	report()
	receive()
	get()
	offer()
	find()
	practice()
	pull()
	avoid()
}
class NotificationEmail {
}
class Password {
}
class LanguageLearner {
	use()
	exchange()
	have()
	get()
	know()
	learn()
	prioritize()
	find()
	order()
	do()
	practice()
	chat()
	search()
}
class Teacher {
}
class Topic {
	talk()
}
class SpeakerLanguageLearner {
	talk()
	use()
	know()
	learn()
}
class Language {
}
class WebsiteOwner {
	make()
	generate()
	add()
	send()
	assess()
	offer()
	inform()
	post()
	view()
	suggest()
	maintain()
}
class Money {
}
class Chatlog {
}
class LanguageTeacher {
	give()
}
class Student {
	modify()
	register()
	avoid()
}
class MarketingPlan {
}
class HelpStudent {
	chat()
	adjust()
}
class LearningPlan {
}
class English {
	talk()
	use()
	achieve()
	learn()
}
class Speakerlanguagelearner {
}
class Practitioner {
	increase()
	help()
}
class OfficeHour {
}
class Blacklist {
}
class Behavior {
}
class Account {
}
class Learner {
	meet()
}
class Usage {
}
class Languageskill {
}
class Match {
}
class Information {
}
class Tutor {
	evaluate()
}
class LanguageLevel {
}
class Thursdays {
}
class Degree {
}
class Languageproficiency {
}
class LanguageLearners {
}
class WebsiteBlog {
}
class Advertisement {
}
class Experience {
}
class Userstatistic {
}
class FriendList {
}
class Privacypolicy {
}
class DevelopmentPhase {
}
class EnglishTalkingAssignment {
}
class Server {
}
class Email {
}
class Harassment {
}
class Meeting {
}
class UniversityStudent {
	post()
}
class Member {
}
class Alert {
}
class Research {
}
class Touch {
}
class Service {
}
class Suggestion {
}
class Culture {
}
class LanguageAssignment {
}
class Action {
}
class SearchResult {
}
class World {
}
class Need {
}
class Announcement {
}
class Goal {
}
class Languagelearner {
}
class InteractionTask {
}
LanguageLearner --> LanguageLearner : search
LanguageLearner --> Topic : find
SpeakerLanguageLearner --> LanguageLearner : talk
WebsiteUser --> People : pull
Student o-- Privacypolicy : modify
WebsiteOwner --> WebsiteOwner : view
SpeakerLanguageLearner --> World : know
WebsiteUser o-- Language : practice
WebsiteOwner --> Email : send
English --> English : learn
WebsiteOwner --> DevelopmentPhase : maintain
Tutor --> HelpStudent : evaluate
WebsiteUser --> NotificationEmail : receive
WebsiteOwner --> Need : assess
WebsiteOwner o-- User : inform
LanguageLearner --> Degree : have
User --> Service : subscribe
Student --> Account : register
LanguageTeacher --> EnglishTalkingAssignment : give
WebsiteOwner o-- User : send
WebsiteOwner --> Member : offer
User --> Password : forget
User --> Password : reset
HelpStudent --> LearningPlan : adjust
Practitioner --> Languageproficiency : increase
WebsiteOwner o-- User : generate
WebsiteOwner --> Server : maintain
WebsiteOwner --> Suggestion : add
UniversityStudent --> Announcement : post
Learner --> Learner : meet
LanguageLearner --> LanguageLearners : find
LanguageLearner o-- Teacher : use
User --> Email : reset
English --> Speakerlanguagelearner : use
Tutor --> LanguageLevel : evaluate
LanguageLearner --> Culture : know
LanguageLearner o-- Language : practice
Student --> Usage : avoid
English o-- Goal : achieve
WebsiteOwner --> WebsiteBlog : post
LanguageLearner --> LanguageLearner : practice
User --> User : review
WebsiteUser --> Harassment : avoid
Practitioner --> Student : help
LanguageLearner --> Languagelearner : search
English --> Speakerlanguagelearner : talk
LanguageLearner o-- LanguageAssignment : do
SpeakerLanguageLearner --> Language : learn
WebsiteUser o-- Languageskill : offer
SpeakerLanguageLearner --> LanguageLearner : use
WebsiteUser --> Advertisement : avoid
WebsiteOwner --> Meeting : offer
WebsiteOwner --> Research : add
WebsiteOwner --> InteractionTask : suggest
WebsiteUser --> Action : find
LanguageLearner o-- Match : prioritize
HelpStudent --> OfficeHour : adjust
WebsiteUser --> Experience : get
WebsiteOwner --> Money : make
UniversityStudent --> Member : post
LanguageLearner o-- SearchResult : order
LanguageLearner --> Information : exchange
WebsiteUser --> Blacklist : pull
WebsiteOwner --> Userstatistic : view
User --> User : add
User --> Chatlog : retrieve
WebsiteOwner --> Alert : post
LanguageLearner o-- Teacher : chat
WebsiteOwner --> MarketingPlan : generate
Learner --> Thursdays : meet
WebsiteUser --> Behavior : report
LanguageTeacher o-- Student : give
User --> FriendList : add
LanguageLearner --> Touch : get
WebsiteUser --> WebsiteUser : report
Speaker --> World : know

@enduml