@startuml
hide circle
class Vendor<actor> {
	profile
	itemPrice
	product
	pricing
	item
	service
}
class Consumer<actor> {
	cart
	securityQuestion
	account
	searchResult
	password
}
class WebsiteOwner<actor> {
	customer
}
class WebsiteModerator<actor> {
	customer
}
class WebsiteEndUser<actor> {
}
class Catalog {
}
class Discussion {
}
class Website {
}
class Owner {
	approve()
	determine()
	post()
	help()
	encourage()
	suspend()
}
class Moderator {
	approve()
	determine()
	post()
	help()
	encourage()
	suspend()
}
class EndUser {
}
class Post {
}
class Quality {
}
class Reset {
}
class Sale {
}
class Consumer {
	participate()
	find()
	reset()
	refer()
	review()
	do()
	subscribe()
	rate()
	look()
	add()
	ensure()
	sort()
	search()
	leave()
	narrow_down()
	manage()
	have()
	verify()
	keep()
	gain()
	see()
	get()
	notify()
}
class Vendor {
	inform()
	look_up()
	upload()
	compare()
	offer()
	make()
	ship()
	publish()
	gather()
	provide()
	convince()
	manage()
	communicate()
	add()
	list()
	view()
	improve()
}
class Product {
	be()
	suit()
}
class Account {
}
class Communication {
	see()
}
class Profile {
}
class EmailAddress {
	change()
	forget()
}
class Price {
	improve()
}
class Fulfillment {
	complete()
}
class Blog {
	provide()
	highlight()
}
class Knowledge {
	become()
}
class Item {
	reach()
}
class IncreaseSale {
}
class Income {
}
class Event {
	happen()
}
class Id {
}
class Feedback {
}
class VolumeTotal {
	determine()
}
class Promotion {
	attract()
}
class Date {
}
class Comment {
}
class Market {
}
class SearchResult {
}
class Forum {
}
class Purchase {
}
class Order {
}
class Cart {
}
class Service {
}
class Resource {
}
class Issue {
}
class Access {
}
class Transaction {
	complete()
}
class Future {
}
class Password {
}
class Time {
}
class Pricing {
}
class Discount {
}
class Recommendation {
}
class Video {
}
class WebsiteModerator {
}
class WebsiteEndUser {
}
class WebsiteOwner {
}
Consumer o-- Account : manage
Blog --> Resource : provide
Blog --> Issue : highlight
Consumer --> Access : get
Owner --> Communication : post
Consumer --> Vendor : rate
Consumer --> Product : sort
Vendor --> Catalog : add
Consumer --> Product : find
Vendor --> Future : improve
Consumer --> Item : see
Consumer --> Discussion : participate
Moderator --> Account : approve
Vendor --> Post : publish
Owner --> Sale : encourage
Consumer o-- Password : manage
Consumer --> Item : add
Vendor --> Time : view
Vendor o-- Product : ship
Vendor o-- Product : add
Owner --> Account : approve
Vendor o-- Pricing : make
Moderator --> Communication : post
Vendor --> Discount : provide
Vendor o-- Profile : upload
Consumer --> Recommendation : get
Consumer --> EmailAddress : reset
Vendor --> Video : upload
Moderator --> Account : suspend
Vendor --> Price : manage
Owner --> Account : suspend
Moderator --> Vendor : supported_by
Product o-- Catalog
Item o-- Price
Owner --> Blog : post
Forum o-- Discussion
Vendor o-- Product : improve
Item --> Cart : to
Consumer --> Product : search
Access --> Service : to
Moderator --> Sale : encourage
Website o-- Owner
Owner --> Vendor : supported_by
Vendor --> Price : compare
WebsiteModerator <|-- Moderator
Item --> IncreaseSale : reach
Website o-- Moderator
Website o-- EndUser
Vendor o-- Account
Consumer --> Knowledge : gain
Blog o-- Post
Price --> Income : improve
Vendor o-- Item : list
Password o-- Reset
WebsiteEndUser <|-- EndUser
Discount --> Consumer : to
Consumer --> Id : verify
Service o-- Quality
WebsiteOwner <|-- Owner
Vendor --> Feedback : gather
Moderator --> Vendor : determine
Moderator --> Blog : post
VolumeTotal --> Vendor : determine
Consumer --> Knowledge : participate
Owner --> Vendor : determine
Vendor --> Promotion : offer
Vendor --> Date : view
Consumer --> Comment : leave
Item --> Market : reach
Consumer --> Blog : search
Consumer o-- SearchResult : narrow_down
Consumer --> Forum : search
Consumer --> Vendor : review
Consumer --> Reset : get
Consumer --> Purchase : do
Vendor o-- Service : improve
Consumer --> Quality : ensure
Vendor --> Order : offer
Consumer o-- Cart : manage

@enduml