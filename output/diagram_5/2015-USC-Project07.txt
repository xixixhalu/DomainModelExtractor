@startuml
hide circle
class Vendor<actor> {
	item
	profile
	itemPrice
	pricing
	service
	product
}
class Consumer<actor> {
	account
	cart
	searchResult
	securityQuestion
	password
}
class WebsiteOwner<actor> {
	customer
}
class WebsiteModerator<actor> {
	customer
}
class WebsiteEndUser<actor> {
}
class Quality {
}
class Discussion {
}
class Reset {
}
class Catalog {
}
class Website {
}
class Moderator {
	help()
	determine()
	approve()
	encourage()
	suspend()
	post()
}
class EndUser {
}
class Owner {
	help()
	determine()
	approve()
	suspend()
	encourage()
	post()
}
class Post {
}
class Vendor {
	compare()
	make()
	add()
	inform()
	offer()
	upload()
	improve()
	list()
	provide()
	gather()
	look_up()
	publish()
	ship()
	manage()
	communicate()
	convince()
	view()
}
class Consumer {
	do()
	look()
	have()
	leave()
	manage()
	see()
	keep()
	get()
	notify()
	review()
	ensure()
	search()
	participate()
	subscribe()
	reset()
	add()
	find()
	verify()
	sort()
	rate()
	narrow_down()
	gain()
	refer()
}
class Comment {
}
class Cart {
}
class Event {
	happen()
}
class Account {
}
class Profile {
}
class Product {
	be()
	suit()
}
class Access {
}
class Pricing {
}
class Price {
	improve()
}
class Income {
}
class Date {
}
class SearchResult {
}
class Sale {
}
class Forum {
}
class Blog {
	highlight()
	provide()
}
class Issue {
}
class Item {
	reach()
}
class IncreaseSale {
}
class Recommendation {
}
class Time {
}
class Feedback {
}
class Id {
}
class Knowledge {
	become()
}
class Resource {
}
class Fulfillment {
	complete()
}
class Promotion {
	attract()
}
class Service {
}
class EmailAddress {
	forget()
	change()
}
class Communication {
	see()
}
class Order {
}
class VolumeTotal {
	determine()
}
class Market {
}
class Password {
}
class Discount {
}
class Purchase {
}
class Video {
}
class Transaction {
	complete()
}
class Future {
}
class WebsiteOwner {
}
class WebsiteModerator {
}
class WebsiteEndUser {
}
Consumer --> Product : sort
Consumer --> Item : add
Owner --> Vendor : determine
Owner --> Account : suspend
Owner --> Blog : post
Vendor --> Promotion : offer
Vendor --> Post : publish
Vendor --> Order : offer
Vendor --> Price : manage
Vendor o-- Product : ship
VolumeTotal --> Vendor : determine
Vendor o-- Product : add
Item --> Market : reach
Vendor o-- Product : improve
Owner --> Communication : post
Consumer o-- Password : manage
Vendor --> Discount : provide
Consumer --> Vendor : rate
Consumer --> Discussion : participate
Consumer --> Purchase : do
Consumer --> Comment : leave
Moderator --> Communication : post
Consumer o-- Cart : manage
Vendor --> Catalog : add
Vendor --> Video : upload
Consumer o-- Account : manage
Moderator --> Vendor : determine
Consumer --> EmailAddress : reset
Vendor o-- Item : list
Vendor o-- Profile : upload
Owner --> Sale : encourage
Owner --> Vendor : supported_by
Consumer --> Access : get
Vendor --> Future : improve
Moderator --> Vendor : supported_by
Vendor o-- Pricing : make
Consumer --> Product : find
Blog o-- Post
Consumer --> Product : search
Item --> Cart : to
Password o-- Reset
Price --> Income : improve
WebsiteOwner <|-- Owner
Website o-- EndUser
Website o-- Owner
Vendor --> Date : view
Discount --> Consumer : to
Item o-- Price
Consumer o-- SearchResult : narrow_down
WebsiteModerator <|-- Moderator
Moderator --> Sale : encourage
Website o-- Moderator
Consumer --> Vendor : review
Product o-- Catalog
Consumer --> Reset : get
Vendor o-- Account
Forum o-- Discussion
Consumer --> Forum : search
WebsiteEndUser <|-- EndUser
Owner --> Account : approve
Service o-- Quality
Blog --> Issue : highlight
Access --> Service : to
Moderator --> Account : approve
Item --> IncreaseSale : reach
Consumer --> Recommendation : get
Vendor --> Time : view
Moderator --> Blog : post
Vendor --> Feedback : gather
Consumer --> Id : verify
Consumer --> Knowledge : participate
Blog --> Resource : provide
Moderator --> Account : suspend
Consumer --> Knowledge : gain
Vendor --> Price : compare
Consumer --> Item : see
Consumer --> Blog : search
Consumer --> Quality : ensure
Vendor o-- Service : improve

@enduml