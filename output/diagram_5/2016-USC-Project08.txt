@startuml
hide circle
class Admin<actor> {
}
class User<actor> {
}
class Maintainer<actor> {
}
class Password<actor> {
}
class Entrepreneur<actor> {
}
class Mentor<actor> {
}
class Questionnaire<actor> {
}
class Edit<actor> {
}
class Re<actor> {
}
class Maintainer {
	update()
	build()
}
class App {
}
class Admin {
	use()
	disable()
	add()
	increase()
}
class Quality {
}
class Mentor {
	view()
	identify()
	assign()
	create()
}
class Weakness {
}
class Entrepreneur {
	see()
	have()
	complete()
}
class Profile {
	provides()
}
class Information {
}
class Account {
}
class User {
	like()
	delete()
	share()
	post()
	send()
	use()
	receive()
	change()
}
class Version {
}
class Issue {
}
class Post {
}
class Application {
}
class Access {
}
class Algorithm {
	match()
}
class Message {
}
class LessonContent {
}
class Password {
}
class MentorInformation {
}
class Questionnaire {
	provides()
}
class EntrepreneurStrength {
}
class CurriculumContent {
}
class Homework {
}
class CourseContent {
}
Mentor --> Homework : assign
Maintainer --> App : build
Entrepreneur --> Profile : complete
User --> Message : receive
User --> Message : send
Profile --> Information : provides
Admin --> CourseContent : add
User --> Post : like
Admin --> Quality : increase
Mentor --> LessonContent : create
Admin --> Account : disable
User --> Password : change
Mentor --> Weakness : identify
Entrepreneur --> MentorInformation : see
User --> Version : use
User --> Account : delete
Questionnaire --> Information : provides
User --> Issue : post
Mentor --> Profile : view
Mentor --> EntrepreneurStrength : identify
User --> Post : share
Entrepreneur --> Questionnaire : complete
Maintainer --> Application : update
Algorithm --> Mentor : match
Mentor --> CurriculumContent : create
Entrepreneur --> Access : have
Entrepreneur --> Mentor : have
Admin --> Algorithm : use
Algorithm --> Entrepreneur : match

@enduml