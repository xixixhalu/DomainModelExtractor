@startuml
hide circle
class User<actor> {
	account
}
class Maintainer<actor> {
}
class Entrepreneur<actor> {
}
class Mentor<actor> {
}
class Mentor {
	create()
	assign()
	view()
	review()
	identify()
	track()
}
class Homework {
}
class Admin {
	disable()
	increase()
	add()
	use()
}
class EntrepreneurStrength {
}
class User {
	sign_up()
	delete()
	post()
	change()
	send()
	access()
	comment()
	sign()
	share()
	like()
	use()
}
class Algorithm {
	match()
}
class Maintainer {
	build()
	update()
}
class Application {
}
class Questionnaire {
	provide()
}
class Information {
}
class Account {
}
class Entrepreneur {
	see()
	submit()
	have()
	complete()
}
class Weakness {
}
class Version {
}
class CourseContent {
}
class Curriculum {
}
class MentorInformation {
}
class HomeworkAssignment {
}
class CommunityForum {
}
class NewsFeed {
}
class Issue {
}
class Post {
}
class Quality {
}
class App {
}
class Lesson {
}
class Profile {
}
class Access {
}
class AppStore {
}
User --> Post : comment
Maintainer --> Application : update
Admin --> Algorithm : use
Entrepreneur --> Curriculum : have
Entrepreneur --> Access : have
Mentor --> Homework : assign
User --> Issue : comment
Entrepreneur --> HomeworkAssignment : submit
Questionnaire --> Information : provide
Entrepreneur --> App : submit
User --> CommunityForum : access
User o-- Account : delete
Maintainer --> AppStore : update
Entrepreneur --> Mentor : have
User --> Post : like
User --> NewsFeed : share
User --> Application : sign
Mentor --> Questionnaire : view
Admin --> Account : disable
User --> Issue : post
Entrepreneur --> Profile : complete
Mentor --> Weakness : identify
User --> Post : share
User --> Version : use
Admin --> Quality : increase
Admin --> CourseContent : add
Entrepreneur --> MentorInformation : see
Mentor --> EntrepreneurStrength : identify
Maintainer --> App : build
Admin --> Entrepreneur : disable
Algorithm --> Entrepreneur : match
Mentor --> Lesson : create
Entrepreneur --> Curriculum : submit
Algorithm --> Mentor : match

@enduml