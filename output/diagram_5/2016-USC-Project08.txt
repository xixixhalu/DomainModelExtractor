@startuml
hide circle
class Admin<actor> {
}
class User<actor> {
	account
}
class Maintainer<actor> {
}
class Entrepreneur<actor> {
}
class Maintainer {
	update()
	build()
}
class App {
}
class Entrepreneur {
	see()
	match()
	resubmit()
	edit()
	complete()
	submit()
	have()
}
class Information {
}
class User {
	comment()
	sign_up()
	receive()
	share()
	like()
	send()
	use()
	access()
	reset()
	delete()
	change()
	post()
}
class Post {
}
class Access {
}
class Algorithm {
	match()
}
class Mentor {
	assign()
}
class Message {
}
class NewsFeed {
}
class Issue {
}
class Admin {
	add()
	disable()
	use()
	increase()
}
class CourseContent {
}
class Application {
}
class Quality {
}
class Password {
}
class Comment {
}
class Profile {
	provide()
}
class Account {
}
class HomeworkAssignment {
}
class Questionnaire {
	provide()
}
class Version {
}
Questionnaire --> Information : provide
Entrepreneur --> HomeworkAssignment : submit
User --> NewsFeed : share
Mentor o-- Information
Entrepreneur --> Information : see
Profile --> Information : provide
Admin --> Application : add
Algorithm --> Mentor : match
User --> Message : send
Algorithm --> Entrepreneur : match
User --> Message : receive
Admin --> Account : disable
User --> NewsFeed : like
User --> Password : change
User o-- Account : delete
User --> Issue : post
User --> Post : like
User --> NewsFeed : comment
User --> Post : comment
Admin --> CourseContent : add
Entrepreneur --> Access : have
User --> Comment : post
Entrepreneur --> Profile : complete
Entrepreneur --> HomeworkAssignment : resubmit
Maintainer --> Application : update
Entrepreneur --> Questionnaire : complete
Admin --> Quality : increase
User --> Version : use
Entrepreneur --> HomeworkAssignment : edit
User --> Password : reset
Admin --> Algorithm : use
User --> Post : share
Maintainer --> App : build

@enduml