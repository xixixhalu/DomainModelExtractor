@startuml
hide circle
class User<actor> {
	location
	account
	schedule
	metric
}
class Admin<actor> {
}
class FarmContractor<actor> {
}
class FarmManager<actor> {
}
class Tommorow {
	weather
}
class Tone {
}
class Data {
}
class Farm {
}
class Contractor {
	search()
}
class Manager {
	search()
}
class User {
	wear()
	share()
	disable()
	view()
	access()
	do()
	feel()
	change()
	know()
	use()
	watch()
	modify()
	toggle()
	opt()
	identify()
	create()
	receive()
}
class Quiz {
}
class Checklist {
}
class Admin {
	define()
	see()
	create()
	upload()
	access()
	add()
	delete()
}
class EmergencyContactList {
}
class Video {
}
class Location {
}
class Order {
}
class Account {
}
class Notification {
}
class Content {
}
class TextMessage {
	receive()
}
class Feature {
}
class Contents {
}
class Material {
}
class App {
	get()
}
class Information {
}
class Display {
}
class HealthData {
}
class Role {
}
class VibrationLevel {
}
class Temperature {
}
class Metric {
}
class FarmManager {
}
class FarmContractor {
}
User --> Data : view
Farm o-- Contractor
User --> Checklist : create
Admin --> Quiz : create
User --> Tone : change
Notification o-- Tone
User --> EmergencyContactList : create
User --> Material : access
Temperature o-- Data
User --> Video : watch
FarmContractor <|-- Contractor
Admin --> Video : upload
App --> Information : get
Farm o-- Manager
User o-- Location : share
User --> Display : toggle
User --> Order : feel
Admin --> HealthData : access
User o-- Account : disable
User --> Information : receive
Admin --> Role : define
User --> Notification : receive
User --> VibrationLevel : change
Admin --> Content : create
TextMessage --> Content : receive
Admin --> Temperature : access
Admin --> Contents : delete
User --> Quiz : do
User --> Feature : use
User o-- Metric : create
FarmManager <|-- Manager

@enduml