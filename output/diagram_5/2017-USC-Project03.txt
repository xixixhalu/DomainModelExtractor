@startuml
hide circle
class User<actor> {
	kid
	swimmer
	information
}
class Developer<actor> {
}
class Parent<actor> {
	kid
	account
	kidAccount
}
class Treasurer<actor> {
}
class Maintainer<actor> {
}
class Head<actor> {
}
class Kid {
	account
}
class Treasurer {
	see()
}
class User {
	expect()
	see()
}
class Information {
}
class Parent {
	see()
	edit()
	sign()
	login()
	view()
}
class Event {
}
class Coach {
	overwrite()
	review()
	extract()
	set()
	edit()
	modify()
	close()
	expect()
	upload()
}
class Maintainer {
	see()
	modify()
	delete()
	have()
	access()
	insert()
}
class Database {
}
class Amount {
	collect()
}
class Developer {
	have()
}
class Date {
}
class Access {
}
class Something {
}
class Frame {
}
class Swimmer {
	sign()
}
class Head {
	generate()
}
class CSVFile {
}
class List {
}
class PdfInformation {
}
class Week {
}
class SourceCode {
}
class Documentation {
}
class RegistrationKey {
}
class PdfReport {
}
class AmountDetail {
}
class KidAccount {
}
class Signup {
}
class Option {
}
class Result {
}
Parent --> Event : edit
Parent --> RegistrationKey : login
Coach --> Event : upload
Head --> PdfReport : generate
Maintainer --> Access : have
Parent --> RegistrationKey : supported_by
Head --> CSVFile : generate
Maintainer --> Database : insert
Maintainer --> AmountDetail : see
Developer --> Database : have
Parent o-- KidAccount : login
Coach --> Information : review
Treasurer --> Amount : see
Developer --> Date : have
Coach --> Signup : expect
Coach --> List : edit
Parent o-- Kid : sign
Maintainer --> Kid : insert
Maintainer --> Kid : see
User --> Option : see
Coach --> PdfInformation : extract
Coach --> User : modify
Parent --> Event : view
Coach --> Result : overwrite
Developer --> Access : have
Coach --> Week : close
User --> Event : see
Maintainer --> SourceCode : have
Coach --> Something : modify
User o-- Information : expect
Parent --> Information : view
Maintainer --> Documentation : have
Coach --> Frame : close
Maintainer --> Event : insert
Maintainer --> Database : access

@enduml