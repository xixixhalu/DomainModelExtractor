@startuml
hide circle
class User<actor> {
	friend
	rank
	challenge
	challengeScore
	photo
	challengeTask
}
class Student<actor> {
	challengerList
}
class Competitor<actor> {
	opponentPost
	challengePost
	post
}
class Request {
}
class Score {
	buy()
}
class Task {
}
class Competitor {
	view()
	verify()
	post()
}
class OpponentPost {
}
class Application {
	improve()
}
class Challenge {
	verify()
	have()
}
class User {
	do()
	go()
	verify()
	get()
	check()
	invite()
	use()
	know()
	receive()
	see()
	send()
	play()
	finish()
	submit()
	give()
	add()
	pick()
}
class Rank {
}
class IPhoneModel {
	play()
}
class Student {
	compete()
	select()
	see()
	prepare()
}
class Game {
}
class Challenger {
	challenge()
}
class Idea {
}
class Notification {
}
class Friend {
	participate()
}
class Chance {
	click()
}
class Button {
}
class Detail {
}
class FinishTime {
}
class Reward {
}
class Photo {
}
class Suggestion {
}
class Post {
}
class Day {
}
class Time {
	remain()
}
class Sth {
}
User --> IPhoneModel : use
Student --> Day : see
Challenge o-- Request
User --> Detail : get
User o-- Challenge : check
Student o-- Challenge : see
User --> Game : see
User --> FinishTime : see
User o-- Challenge : see
Score --> Sth : buy
User --> Game : play
Challenge o-- Notification
User --> Competitor : pick
Student --> Competitor : select
Challenge o-- Post
Challenge o-- Task
User --> Idea : submit
User --> Reward : get
Challenge o-- Game
User o-- Challenge : finish
Competitor o-- Post : post
Challenge o-- Score
User --> Notification : get
Request --> Friend : to
User --> Notification : receive
User o-- Photo : add
User --> Score : use
Competitor o-- OpponentPost : verify
Friend --> Challenge : participate
User --> Suggestion : give
Student --> Competitor : compete
User --> Task : do
User o-- Challenge : verify
User --> Request : send
User o-- Challenge : send
IPhoneModel --> Game : play
User o-- Friend : invite
Competitor o-- Post : view
Chance --> Button : click
User o-- Rank : see

@enduml