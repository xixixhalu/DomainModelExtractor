@startuml
hide circle
class Administrator<actor> {
}
class Maintainer<actor> {
}
class Developer<actor> {
}
class User<actor> {
	information
	area
	friend
	accountInformation
}
class Venue {
	detail
	be()
}
class User {
	call()
	see()
	create()
	consent()
	search()
	import()
	delete()
	lose()
	contact()
	get()
	confirm()
	have()
	block()
	leave()
	enter()
	unblock()
	close()
	find()
	reject()
	receive()
}
class Message {
}
class Info {
}
class Question {
}
class Maintainer {
	make()
	see()
	withdraw()
	guarantee()
}
class Administrator {
	see()
	edit()
	add()
	block()
	cancel()
	close()
	open()
}
class LocationInformation {
}
class Friend {
}
class Account {
	follow()
}
class Policy {
}
class Event {
}
class Option {
}
class Information {
}
class TutorialEntrance {
	introduce()
}
class Detail {
}
class Developer {
	guarantee()
}
class Analytic {
}
class GpsRecording {
	let()
}
class Route {
}
class Profession {
}
class Recommendation {
}
User --> Message : block
User --> Message : lose
User --> Venue : see
User --> TutorialEntrance : see
User o-- Info : receive
Maintainer --> User : guarantee
User --> User : contact
User --> Recommendation : receive
Administrator --> Detail : edit
Route --> Friend : to
User --> Question : see
Account o-- Information
User --> LocationInformation : get
Developer --> User : guarantee
Maintainer --> Account : withdraw
User o-- Friend : delete
User --> Venue : leave
Maintainer --> Analytic : see
User --> Venue : enter
User --> User : confirm
Account --> Policy : follow
User --> User : see
Administrator --> Information : see
User --> Message : call
Administrator --> Event : cancel
Administrator --> Venue : close
Administrator --> Event : add
User o-- Account : create
User o-- Information : import
User o-- Account
User --> Option : have
Maintainer --> Maintainer : guarantee
User --> Route : see
User --> Message : unblock
Administrator --> Account : block
User o-- Information : see
User --> Profession : see

@enduml