@startuml
hide circle
class User<actor> {
}
class Office<actor> {
}
class Doctor<actor> {
}
class Admin<actor> {
}
class Administrator<actor> {
}
class Developer<actor> {
}
class User {
	attach()
	access()
	manage()
	download()
	export()
	add()
	view()
	generate()
	create()
	delete()
	assign()
	import()
}
class Set {
}
class Doctor {
	want()
	edit()
	view()
	fill()
	recommend()
	match()
	choose()
}
class Patient {
}
class Task {
}
class OrderForm {
}
class Admin {
	customize()
}
class Portal {
}
class Inventory {
}
class Form {
}
class Allergy {
}
class CSVFile {
	has()
}
class Information {
}
class Report {
}
class Product {
}
class ProductInfo {
}
class VisitDetail {
}
class App {
}
class Developer {
	protect()
}
class Data {
}
class VendorProductInformation {
}
class PatientRecord {
}
class Administrator {
	save()
}
class PatientDocument {
}
class Medication {
}
class Invoice {
}
class Progress {
}
class Application {
	handles()
}
User --> VisitDetail : view
Doctor --> Patient : choose
User --> Form : download
User --> Form : add
User --> Invoice : create
Doctor --> App : want
User --> Task : assign
Doctor --> Progress : edit
Doctor --> OrderForm : fill
Developer --> App : protect
Doctor --> Product : choose
Doctor --> Set : choose
Application --> Information : handles
User --> Product : add
User --> Allergy : add
User --> Data : attach
Doctor --> Patient : match
User --> VendorProductInformation : import
User --> Inventory : manage
CSVFile --> Information : has
Admin --> Portal : customize
User --> PatientRecord : create
Doctor --> Report : view
User --> Data : manage
Doctor --> Product : recommend
Administrator --> PatientDocument : save
User --> ProductInfo : export
User --> Task : generate
User --> Form : delete
User --> Set : delete
User --> Information : access
User --> Set : download
User --> Medication : add

@enduml