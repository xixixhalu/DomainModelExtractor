@startuml
hide circle
class User<actor> {
	order
	recipelist
	orderHistory
	coffeeApp
	coffeeSelection
	recipe
	coffeeRecipe
	coffee
	username
}
class Admin<actor> {
}
class Supplier<actor> {
}
class Maintainer<actor> {
}
class History {
}
class Supplier {
	receive()
}
class Update {
}
class User {
	customize()
	change()
	see()
	share()
	identify()
	hold()
	earn()
	customise()
	vend()
	like()
	want()
	produce()
	replace()
	delete()
	send()
	update()
	exist()
	add()
	browse()
	view()
	save()
	log_in()
	check()
}
class Recipe {
	contain()
}
class Maintainer {
	update()
	track()
}
class Order {
}
class Coffee {
}
class Location {
}
class Color {
}
class MediaAccount {
}
class ApplePay {
	purchase()
}
class Kiosk {
}
class Paypal {
	purchase()
}
class Cup {
}
class Reward {
}
class Allergen {
}
class Admin {
	have()
}
class Portal {
}
class Picture {
}
class Phone {
}
class DefaultPaymentMethod {
}
class Theme {
}
class NutritionDetail {
}
class Baserecipe {
}
User o-- Recipe : view
User o-- Order : replace
User o-- Order : send
User o-- Coffee : customise
User --> History : view
Order o-- History
User o-- Recipe : produce
Maintainer --> Location : update
Admin --> Portal : have
User --> Color : customize
User --> Picture : save
User --> MediaAccount : log_in
ApplePay --> Coffee : purchase
User --> Phone : save
User --> DefaultPaymentMethod : add
User o-- Recipe : delete
Maintainer --> Kiosk : track
Paypal --> Coffee : purchase
User o-- Recipe : want
User --> Theme : customize
User --> Cup : send
User --> NutritionDetail : see
User o-- Recipe : share
User --> Reward : earn
User --> Baserecipe : customize
Recipe --> Allergen : contain
Coffee o-- Recipe
Supplier --> Update : receive

@enduml