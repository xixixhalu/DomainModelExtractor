@startuml
hide circle
class User<actor> {
	recipe
	coffee
	coffeeApp
	coffeeSelection
	orderHistory
	order
	coffeeRecipe
	recipeList
	username
}
class Admin<actor> {
}
class Supplier<actor> {
}
class Maintainer<actor> {
}
class History {
}
class Supplier {
	receive()
}
class User {
	update()
	view()
	vend()
	identify()
	see()
	earn()
	customise()
	choose()
	check()
	log()
	delete()
	save()
	give()
	send()
	share()
	replace()
	add()
	exist()
	want()
	browse()
	customize()
	change()
	like()
	produce()
}
class Order {
}
class Color {
}
class DefaultPaymentMethod {
}
class Recipe {
	hold()
	contain()
	store()
}
class Maintainer {
	track()
	update()
}
class Kiosk {
}
class Cup {
}
class Allergen {
}
class Update {
}
class Location {
}
class BaseRecipe {
}
class Picture {
}
class Phone {
}
class App {
}
class NutritionDetail {
}
class Paypal {
	purchase()
}
class Coffee {
}
class WaitTime {
}
class Admin {
	have()
}
class Portal {
}
class ApplePay {
	purchase()
}
class Reward {
}
class MediaAccount {
}
class Theme {
}
class Someone {
}
class Username {
}
class Password {
}
User --> MediaAccount : exist
Coffee o-- Recipe
User --> DefaultPaymentMethod : add
User o-- Order : send
User --> Color : customize
Maintainer --> Kiosk : track
User --> Theme : customize
User o-- Recipe : share
User --> NutritionDetail : see
Order o-- History
User o-- Recipe : want
Cup --> Someone : to
User o-- Recipe : produce
User --> Cup : send
User o-- Recipe : delete
User --> Username : supported_by
Recipe --> Allergen : contain
Paypal --> Coffee : purchase
User --> Password : supported_by
User --> History : view
User --> WaitTime : give
User o-- Order : replace
Supplier --> Update : receive
Maintainer --> Location : update
User o-- Recipe : choose
User --> App : log
Admin --> Portal : have
ApplePay --> Coffee : purchase
User --> BaseRecipe : customize
User o-- Coffee : customise
User --> Picture : save
User --> DefaultPaymentMethod : save
User --> Phone : save
User --> Reward : earn
User o-- Recipe : view

@enduml