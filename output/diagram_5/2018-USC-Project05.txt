@startuml
hide circle
class User<actor> {
	coffee
	recipeList
	coffeeRecipe
	recipe
	coffeeApp
	username
	orderhistory
	order
}
class Supplier<actor> {
}
class Maintainer<actor> {
}
class User {
	produce()
	see()
	save()
	delete()
	browse()
	identify()
	vend()
	change()
	want()
	log_in()
	like()
	canuse()
	replace()
	add()
	earn()
	exist()
	update()
	check()
	choose()
	send()
	hold()
	customise()
	view()
	customize()
	share()
	log()
}
class Supplier {
	receive()
}
class Mediaaccount {
}
class Baserecipe {
}
class Maintainer {
	update()
	track()
}
class Recipe {
	contain()
}
class Order {
}
class Phone {
}
class Color {
}
class Apple {
	pay()
	purchase()
	paypal()
}
class Picture {
}
class Kiosk {
}
class Coffee {
}
class Admin {
	have()
}
class Portal {
}
class CoffeeRecipe {
}
class Orderhistory {
}
class Reward {
}
class DefaultPaymentMethod {
}
class Cup {
	purchase()
}
class App {
}
class Location {
}
class Allergen {
}
class NutritionDetail {
}
class Theme {
}
class Someone {
}
class Update {
}
class List {
}
User --> Phone : save
User --> List : browse
User o-- Order : send
User --> Mediaaccount : exist
User --> Color : customize
User --> DefaultPaymentMethod : add
User o-- Recipe : share
User o-- Recipe : save
User o-- Recipe : want
User --> App : log
Maintainer --> Location : update
User --> Picture : save
Recipe --> Allergen : contain
Maintainer --> Kiosk : track
User --> Baserecipe : customize
User --> NutritionDetail : see
Apple --> Coffee : purchase
User --> Reward : earn
User --> Theme : customize
User o-- Recipe : delete
Admin --> Portal : have
User --> Someone : send
User o-- Order : replace
User o-- CoffeeRecipe : produce
Supplier --> Update : receive
User o-- Orderhistory : view
User o-- Coffee : customise

@enduml