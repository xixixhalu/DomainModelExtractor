@startuml
hide circle
class User<actor> {
	member
	profile
	profilePage
	account
}
class Patient<actor> {
	supportGroup
	event
	wall
	calendar
	profile
	supportNetwork
	invitation
}
class Support<actor> {
	patient
}
class Administrator<actor> {
}
class Family<actor> {
}
class Member<actor> {
	network
}
class Admin<actor> {
}
class User {
	access()
	delete()
	suspend()
	report()
	update()
	block()
	manage()
}
class Message {
}
class Patient {
	add()
	get()
	have()
	send()
	share()
	decide()
	provide()
	allow()
	pull()
	attend()
	contact()
	ask()
	sign_up()
	post()
}
class Family {
	love()
	check()
	send()
}
class Admin {
	post()
	view()
}
class Statistics {
}
class Link {
	add()
	sign()
}
class Calendar {
}
class Information {
}
class Support {
	get()
	receive()
}
class Resource {
}
class AdMessage {
}
class Member {
	get()
	send()
	receive()
	decide()
	notify()
	publish()
	check()
	ask()
	help()
}
class Junk {
}
class Network {
	have()
}
class Appointment {
}
class Group {
	notify()
	access()
}
class Account {
}
class Friend {
	notify()
	ask()
}
class Everyone {
}
class Administrator {
	delete()
	suspense()
}
class Behalf {
}
class HealthCondition {
}
class Profile {
}
class Event {
}
class Money {
	love()
}
class Messaging {
}
class Notification {
}
class Announcement {
}
class PrivacySetting {
}
class Invitation {
}
class Kind {
}
Patient o-- Event : attend
Message --> Group : to
Admin --> Statistics : view
Announcement --> Everyone : to
Patient --> Messaging : send
Support o-- Network
User o-- Account : delete
Patient --> Group : supported_by
Patient o-- Calendar : share
Member --> Notification : get
Announcement --> Group : to
Patient --> Information : get
Support o-- Group
User --> Information : update
Administrator --> Account : suspense
Group --> Everyone : notify
Family --> Money : send
Administrator --> Account : delete
Patient o-- Profile : share
User o-- Account : suspend
Support --> Resource : receive
Patient --> Friend : pull
Support --> Notification : get
Patient --> Behalf : post
User --> AdMessage : report
Admin --> Behalf : post
Patient --> HealthCondition : have
User o-- Profile : access
Admin --> Announcement : post
User --> Junk : report
User o-- Member : manage
Group --> Kind : access
Network --> PrivacySetting : have
Member --> Link : send
Patient --> Patient : contact
User --> Message : block
Member o-- Network : decide
Patient o-- Invitation : share
Member --> Money : send
Patient --> Message : send
Patient o-- Event : add
Patient --> Appointment : have
Calendar o-- Event
Patient --> Member : pull
Group --> Group : notify
Member --> Resource : receive

@enduml