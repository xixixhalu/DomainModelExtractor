@startuml
hide circle
class User<actor> {
	member
	profile
	profilePage
	account
}
class Patient<actor> {
	profile
	event
	supportNetwork
	wall
	supportGroup
	calendar
}
class Support<actor> {
	network
	patient
}
class Administrator<actor> {
}
class Family<actor> {
}
class Member<actor> {
	network
}
class PatientAdmin<actor> {
}
class Patient {
	search()
	send()
	sign()
	share()
	pull()
	sign_up()
	attend()
	get()
	have()
	contact()
	add()
	allow()
	decide()
}
class User {
	delete()
	log()
	report()
	update()
	suspend()
	manage()
	block()
	access()
}
class ProfilePage {
}
class AdMessage {
}
class Person {
}
class Junk {
}
class Profile {
}
class Message {
}
class Admin {
	view()
	post()
}
class List {
}
class Member {
	receive()
	send()
	ask()
	get()
	publish()
	check()
	help()
	post()
	decide()
	notify()
}
class Administrator {
	delete()
	suspense()
}
class Account {
}
class PatientAdmin {
	post()
}
class Link {
}
class Friend {
	ask()
	notify()
}
class SupportGroup {
	access()
}
class Resource {
	care()
}
class Appointment {
}
class Everyone {
}
class Announcement {
}
class Information {
}
class Calendar {
}
class Messaging {
}
class Money {
}
class Healthcondition {
}
class CalendarEvent {
}
class Condition {
}
class Group {
}
class Family {
}
class Behalf {
}
class Privacysetting {
}
class Event {
}
class Kind {
}
class Statistics {
}
class Network {
}
class Notification {
}
Admin --> User : view
User --> Person : block
Patient --> Healthcondition : have
Patient o-- Profile : share
Patient --> Patient : search
Patient o-- SupportGroup : share
User --> Junk : report
Patient --> CalendarEvent : add
SupportGroup --> Kind : access
User o-- Profile : access
Member --> Patient : publish
Patient o-- Event : attend
User o-- Member : manage
Patient --> Group : pull
Patient --> Member : pull
Patient --> Condition : search
Patient --> Appointment : have
Patient --> Message : send
Member --> Link : send
Admin --> Statistics : view
Patient o-- SupportGroup : send
Patient --> SupportGroup : supported_by
Member --> SupportGroup : decide
Admin --> Everyone : post
Admin --> List : view
Admin --> Group : post
Admin --> Announcement : post
Member o-- Network : decide
Member --> Resource : receive
User --> Information : update
Member --> Notification : get
Patient --> Condition : supported_by
Member --> Family : send
Administrator --> Account : suspense
Patient --> Information : get
Patient o-- Calendar : share
User --> Message : block
Patient --> Friend : pull
Patient --> Patient : contact
Patient --> Messaging : send
PatientAdmin --> Behalf : post
Patient --> Link : send
User o-- ProfilePage : update
Member --> Money : send
User o-- Account : delete
Patient --> Privacysetting : have
Member --> SupportGroup : publish
User --> AdMessage : report

@enduml