@startuml
hide circle
class User<actor> {
}
class Admin<actor> {
}
class Organization<actor> {
}
class VRSAdmin<actor> {
}
class VRS<actor> {
}
class Developer<actor> {
}
class Employee<actor> {
}
class VRSSubjectMatterExpert<actor> {
}
class User {
	submit()
	update()
	expedite()
	add()
}
class Information {
}
class Developer {
	reuse()
	encrypt()
	minimize()
}
class DevelopmentTime {
}
class VRS {
	delete()
	prioritize()
	assign()
	view()
	generate()
	email()
	filter()
}
class SummaryReport {
}
class WorkplaceViolenceCase {
}
class Complaint {
}
class Organization {
	check()
	view()
	understand()
	redirect()
}
class State {
}
class VRSSubjectMatterExpert {
	notify()
	verify()
}
class WorkplaceUpdate {
}
class ContactDetail {
}
class Admin {
	address()
	filter()
}
class Report {
	contain()
}
class CaseManagementSystem {
}
class VRSAdmin {
	edit()
	filter()
	view()
	generate()
}
class Assigned {
}
class Data {
}
class MediaFile {
}
class Comment {
}
class Employee {
	track()
	view()
	check()
	expect()
	submit()
	edit()
	post()
	have()
	file()
}
class Status {
}
class Ticket {
}
class Case {
}
class Cost {
}
class Communication {
}
class Anonymity {
}
class Evidence {
}
class ProfileDetail {
}
class TicketStatus {
}
class Credibility {
}
class TicketManagement {
}
class Process {
}
User --> Information : add
VRS --> WorkplaceViolenceCase : prioritize
Developer --> Cost : minimize
Developer --> Data : encrypt
VRSAdmin --> Case : view
User --> Process : expedite
VRS --> Complaint : delete
Employee --> Communication : have
VRS --> Organization : email
Report --> MediaFile : contain
Organization --> Employee : redirect
Employee --> Anonymity : expect
VRS --> SummaryReport : generate
Organization --> State : understand
User --> Comment : add
Organization --> Report : view
VRS --> Complaint : view
VRSAdmin --> Report : generate
VRSSubjectMatterExpert --> Organization : notify
Employee --> Evidence : submit
Organization --> WorkplaceUpdate : check
Employee --> Complaint : file
Developer --> DevelopmentTime : minimize
Employee --> ProfileDetail : edit
Employee --> Status : check
User --> ContactDetail : update
VRSAdmin --> TicketStatus : edit
VRSAdmin --> Ticket : filter
Admin --> Report : filter
VRS --> Report : assign
Admin --> Complaint : address
VRSSubjectMatterExpert --> Credibility : verify
VRS --> Case : filter
Developer --> CaseManagementSystem : reuse
VRS --> Report : generate
VRSSubjectMatterExpert --> Case : verify
Developer --> TicketManagement : reuse
User --> Report : submit
VRSAdmin --> Assigned : edit
Employee --> Case : view
Employee --> Complaint : post
Employee --> Status : track

@enduml