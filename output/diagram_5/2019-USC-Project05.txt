@startuml
hide circle
class User<actor> {
	problem
	contactDetail
	identity
	account
	report
}
class Organization<actor> {
	client
}
class VRSAdmin<actor> {
}
class VRS<actor> {
}
class Developer<actor> {
}
class Employee<actor> {
	case
	profiledetail
	anonymity
}
class VRSSubjectMatterExpert<actor> {
}
class VRS {
	form()
	email()
	filter_out()
	assign()
	view()
	prioritize()
	generate()
	resolve()
	delete()
	filter()
}
class User {
	submit()
	update()
	request()
	expedite()
	add()
}
class Report {
	tag()
	contain()
}
class Developer {
	reuse()
	encrypt()
	minimize()
}
class Cost {
}
class Developmenttime {
}
class Organization {
	check()
	view()
	understand()
	redirect()
	make()
}
class VRSAdmin {
	view()
	generate()
	download()
	edit()
	filter()
}
class Ticket {
}
class Employee {
	want()
	post()
	submit()
	check()
	post_along()
	file()
	view()
	track()
	expect()
	have()
	edit()
}
class Document {
}
class Complaint {
}
class Admin {
	filter()
}
class Case {
}
class VRSSubjectMatterExpert {
	verify()
	notify()
	investigate()
}
class Managementsystem {
}
class Workplace {
}
class WorkplaceUpdate {
}
class Status {
}
class MediaFile {
	tag()
}
class Credibility {
}
class Comment {
}
class Detail {
}
class ContactDetail {
}
class Process {
}
class Data {
}
class Anonymity {
}
class State {
}
class Waycommunication {
}
class Account {
	be()
}
class CommentSection {
}
class Profiledetail {
}
class Ease {
}
class Violencecase {
}
class Evidence {
}
class Assignee {
}
class Information {
}
class Portal {
}
class TicketStatus {
}
class News {
}
class SubjectMatterExpert {
}
VRSAdmin --> TicketStatus : edit
Developer --> Developmenttime : minimize
User o-- ContactDetail : update
User --> Complaint : add
VRS --> Complaint : view
VRS --> News : email
VRSAdmin --> Report : generate
Organization --> Organization : view
VRS --> Organization : email
VRS --> Case : filter
Employee o-- Profiledetail : edit
VRS --> SubjectMatterExpert : assign
VRSAdmin --> Ticket : filter
User --> Process : expedite
Organization --> WorkplaceUpdate : check
VRS --> Ease : filter
VRSAdmin --> Case : view
Organization --> Organization : redirect
Employee --> Status : check
VRS --> Violencecase : prioritize
Developer --> Data : encrypt
Employee --> Document : submit
MediaFile --> Case : tag
Employee --> Evidence : submit
Employee o-- Anonymity : expect
Admin --> Report : filter
VRS --> Report : generate
Employee --> Complaint : post
Organization --> Report : view
Organization --> State : understand
VRS --> Case : filter_out
VRSAdmin --> Assignee : edit
Employee --> Complaint : file
VRSSubjectMatterExpert --> Organization : notify
VRSSubjectMatterExpert --> Case : verify
Employee o-- Case : view
Employee --> Waycommunication : have
Employee --> Detail : post
VRS --> Complaint : delete
Employee --> Status : track
VRSSubjectMatterExpert --> Credibility : verify
VRS --> Case : assign
Employee --> Complaint : post_along
VRS --> Report : assign
User --> Information : add
Organization --> VRS : check
User o-- Report : submit
Organization --> Employee : redirect
User o-- Report : add
User --> Comment : add
User --> Portal : request
Employee --> CommentSection : have
Developer --> Managementsystem : reuse
Developer --> Cost : minimize
Organization --> Workplace : understand
Employee --> Detail : supported_by

@enduml