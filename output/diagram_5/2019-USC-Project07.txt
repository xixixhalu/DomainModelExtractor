@startuml
hide circle
class User<actor> {
	point
	progressreport
	performance
}
class Developer<actor> {
}
class Maintainer<actor> {
}
class Developer {
	change()
	hand()
	provide()
	publish()
	restructure()
	fix()
	hand_off()
}
class App {
}
class User {
	play()
	understand()
	track()
	answer()
	proceed()
	have()
	get()
	view()
	skip()
}
class Question {
}
class Time {
	fix()
}
class Option {
	enable()
}
class Project {
}
class Point {
}
class Ui {
}
class Maintainer {
	get()
}
class UserAnalytic {
}
class Graph {
}
class SourceCode {
}
class Trouble {
}
class Progress {
}
class Report {
}
class Component {
	have()
}
class Structure {
}
class Progressreport {
}
class Hint {
}
class Feedback {
}
User --> Question : skip
User o-- Progressreport : view
Developer --> Ui : change
User --> Hint : get
Maintainer --> UserAnalytic : get
User --> Feedback : get
Developer --> Graph : fix
Developer --> SourceCode : hand_off
Developer --> Project : restructure
Option --> User : enable
Developer --> SourceCode : hand
Developer --> Option : provide
User --> Trouble : have
User o-- Progress : track
User --> Report : view
User o-- Point : understand
Component --> Structure : have
Developer --> App : publish
User --> App : play

@enduml