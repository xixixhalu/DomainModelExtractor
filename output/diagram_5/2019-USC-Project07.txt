@startuml
hide circle
class User<actor> {
	progressReport
	performance
	point
}
class Developer<actor> {
}
class Maintainer<actor> {
}
class Analytic {
}
class Developer {
	publish()
	hand()
	fix()
	restructure()
	hand_off()
	provide()
	give()
	change()
}
class Option {
	enable()
}
class Time {
	fix()
}
class Project {
}
class User {
	get()
	track()
	understand()
	play()
	rate()
	view()
	have()
	skip()
	show()
	proceed()
}
class Hint {
}
class Maintainer {
	get()
}
class Question {
	answer()
}
class App {
}
class UI {
	make()
}
class Feedback {
}
class SourceCode {
}
class Component {
	have()
}
class Structure {
}
class Bug {
}
class Progress {
}
class Report {
}
class Graph {
}
class Point {
}
class Trouble {
	answer()
}
class Client {
}
User --> App : play
Developer --> Time : give
Developer --> App : publish
Developer --> Graph : fix
User --> Question : skip
Maintainer --> Analytic : get
User --> App : rate
User o-- Point : understand
Trouble --> Question : answer
Developer --> UI : change
Option --> User : enable
User o-- Analytic
User --> Feedback : get
SourceCode --> Client : to
Developer --> Project : restructure
Developer --> SourceCode : hand_off
Progress o-- Report
Developer --> SourceCode : hand
User --> Hint : get
Component --> Structure : have
Time --> Bug : fix
User o-- Progress : track
User --> Report : view
Developer --> Option : provide

@enduml