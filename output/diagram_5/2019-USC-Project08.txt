@startuml
hide circle
class User<actor> {
}
class Patient<actor> {
}
class Doctor<actor> {
}
class DoctorUser<actor> {
}
class CareTeam<actor> {
}
class Admin<actor> {
}
class HealthcareExecutive<actor> {
}
class App<actor> {
}
class Patient {
	track()
	have()
	update()
	bookscancels()
	compare()
	miss()
	snooze()
	save()
	get()
	add()
	reschedule()
	take()
	cancel()
	do()
	receive()
	completed()
	answer()
	install()
}
class Picture {
	see()
}
class Doctor {
	use()
	modify()
	get()
	enroll()
	register()
}
class Notification {
}
class Prescription {
}
class CareTeam {
	add()
	remove()
	input()
}
class Ride {
}
class Task {
}
class SMSNotification {
}
class DoctorUser {
	view()
}
class QuestionnaireResponse {
}
class HealthcareExecutive {
	see()
}
class Data {
}
class Admin {
	add()
	remove()
	access()
}
class Entry {
}
class Difference {
}
class Recommendation {
}
class User {
	completed()
	answer()
	receive()
}
class Appointment {
}
class Book {
	reschedules()
	get()
}
class Questionnaire {
}
class App {
}
class Information {
}
class PostopReminder {
}
class TimeNotification {
}
class Amount {
}
class Reminder {
}
class Trend {
}
class Pre {
}
class ContactInformation {
}
class graphically {
}
class Database {
}
class SurveyResponse {
}
class HealthRecommendationArticle {
}
class Survey {
}
class Confirmation {
}
class Access {
}
CareTeam --> Patient : add
User --> Amount : answer
Doctor --> Patient : enroll
Patient --> Ride : get
User --> Task : completed
Patient --> HealthRecommendationArticle : save
CareTeam --> Recommendation : input
Patient --> Appointment : bookscancels
Patient --> Picture : take
Patient --> Task : completed
Patient --> Reminder : snooze
Patient --> Survey : do
Doctor --> Prescription : modify
Patient --> SMSNotification : get
Patient --> Amount : answer
Book --> Notification : get
Book --> Appointment : reschedules
Patient --> Appointment : reschedule
Patient --> Picture : compare
Patient --> Confirmation : get
HealthcareExecutive --> Trend : see
Patient --> Questionnaire : do
DoctorUser --> QuestionnaireResponse : view
Patient --> Access : have
Patient --> Appointment : cancel
Doctor --> Patient : register
Patient --> Pre : add
Doctor --> App : use
HealthcareExecutive --> Data : see
DoctorUser --> SurveyResponse : view
Patient --> Appointment : miss
CareTeam --> Information : input
Patient --> ContactInformation : update
Admin --> Entry : add
Patient --> Notification : get
Patient --> graphically : track
Patient --> PostopReminder : add
Picture --> Difference : see
Admin --> Database : access
CareTeam --> Patient : remove
Admin --> Entry : remove
Doctor --> Notification : get
Patient --> App : install
Patient --> Recommendation : receive
User --> TimeNotification : receive

@enduml