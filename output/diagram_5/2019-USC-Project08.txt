@startuml
hide circle
class User<actor> {
	fingerprintScanner
	reminder
}
class Patient<actor> {
	questionnaire
	constraint
	healthStatus
	surgery
	surgeon
	survey
	timeline
	healthCenter
	doctor
	healthProvider
}
class Doctor<actor> {
	patientHealthDecline
}
class DoctorUser<actor> {
	patient
}
class CareTeam<actor> {
	list
}
class Admin<actor> {
}
class HealthcareExecutive<actor> {
}
class HybridApp<actor> {
}
class Response {
}
class Health {
}
class Status {
}
class RecommendationArticle {
}
class HealthcareExecutive {
	see()
	study()
}
class Trend {
}
class Patient {
	complete()
	have()
	do()
	guide()
	compare()
	receive()
	dismiss()
	track()
	install()
	cancel()
	save()
	add()
	rate()
	snooze()
	update()
	reschedule()
	get()
	see()
	answer()
	take()
	provide()
	remind()
}
class Survey {
}
class Doctor {
	get()
	modify()
	enroll()
	use()
	provide()
	register()
	notify()
}
class Prescription {
}
class Application {
	use()
}
class Password {
}
class Reminder {
}
class CareTeam {
	add()
	remove()
	input()
}
class Information {
}
class User {
	check()
	login()
	complete()
	receive()
	answer()
	view()
	indicate()
}
class Constraint {
	take()
}
class App {
	do()
}
class Appointment {
}
class Recommendation {
}
class Medication {
	take()
}
class WebsiteInformation {
}
class Data {
}
class Notification {
}
class ContactInformation {
	save()
}
class Reward {
}
class Server {
}
class Admin {
	access()
	remove()
	add()
}
class Entry {
}
class Questionnaire {
}
class Task {
}
class Database {
}
class Access {
}
class Confirmation {
}
class Picture {
	see()
}
class Difference {
}
class History {
	take()
}
class Addition {
}
class Username {
}
class Amount {
}
class TimeNotification {
}
class SmartphoneApp {
}
class DoctorUser {
}
class EducationContent {
}
class Recovery {
}
class Preparation {
}
HealthcareExecutive --> Trend : see
Patient --> Reward : get
EducationContent --> Recovery : supported_by
Patient --> Task : complete
ContactInformation --> Server : save
CareTeam --> Patient : add
Admin --> Entry : add
Patient o-- Survey : do
Patient --> Appointment : cancel
Survey o-- Response
Doctor o-- User
Admin --> Entry : remove
Patient --> Recommendation : receive
Patient --> Addition : add
Health o-- Status
Doctor o-- Patient : register
Patient --> RecommendationArticle : save
Questionnaire o-- Response
Doctor --> Prescription : modify
Doctor --> Notification : get
Patient --> Appointment : reschedule
Patient --> Picture : take
EducationContent --> Preparation : supported_by
Patient --> Reminder : snooze
User --> User : indicate
Doctor --> RecommendationArticle : provide
Application --> Username : use
Patient o-- Questionnaire : do
CareTeam --> Recommendation : input
Patient --> Amount : answer
Application --> Password : use
User --> Response : view
User --> Task : complete
User --> Amount : answer
Patient --> Reminder : add
Patient --> WebsiteInformation : see
Patient --> Reminder : remind
Admin --> Database : access
User --> TimeNotification : receive
HealthcareExecutive --> Data : see
Patient --> SmartphoneApp : install
Patient --> Access : have
Patient --> Notification : get
Doctor o-- Patient : enroll
CareTeam --> Information : input
Doctor --> App : use
Patient --> Confirmation : get
Patient --> ContactInformation : see
Patient --> Picture : compare
Health o-- RecommendationArticle
CareTeam --> Patient : remove
Picture --> Difference : see
DoctorUser <|-- User
Patient --> Status : track
App --> Appointment : do

@enduml