@startuml
hide circle
class User<actor> {
	reminder
	fingerprintScanner
}
class Patient<actor> {
	surgery
	healthCenter
	questionnaire
	healthStatus
	survey
	constraint
	healthProvider
	doctor
	timeline
	surgeon
}
class Doctor<actor> {
	patientHealthDecline
}
class DoctorUser<actor> {
	patient
}
class CareTeam<actor> {
	list
}
class Admin<actor> {
}
class HealthcareExecutive<actor> {
}
class HybridApp<actor> {
}
class Response {
}
class Health {
}
class RecommendationArticle {
}
class Status {
}
class User {
	receive()
	check()
	view()
	indicate()
	answer()
	login()
	complete()
}
class Patient {
	receive()
	see()
	provide()
	reschedule()
	answer()
	cancel()
	compare()
	complete()
	snooze()
	dismiss()
	remind()
	add()
	update()
	guide()
	do()
	install()
	take()
	rate()
	have()
	track()
	get()
	save()
}
class Reward {
}
class Doctor {
	enroll()
	use()
	notify()
	provide()
	register()
	get()
	modify()
}
class App {
	do()
}
class Picture {
	see()
}
class Difference {
}
class HealthcareExecutive {
	see()
	study()
}
class WebsiteInformation {
}
class Application {
	use()
}
class Username {
}
class Notification {
}
class Prescription {
}
class Task {
}
class Reminder {
}
class CareTeam {
	add()
	input()
	remove()
}
class Admin {
	access()
	add()
	remove()
}
class Database {
}
class Questionnaire {
}
class TimeNotification {
}
class Addition {
}
class Survey {
}
class Entry {
}
class Data {
}
class ContactInformation {
	save()
}
class Access {
}
class Amount {
}
class Confirmation {
}
class Trend {
}
class Medication {
	take()
}
class Appointment {
}
class Information {
}
class Recommendation {
}
class SmartphoneApp {
}
class History {
	take()
}
class Constraint {
	take()
}
class Server {
}
class Password {
}
class EducationContent {
}
class Preparation {
}
class DoctorUser {
}
class Recovery {
}
Patient o-- Survey : do
Patient --> Reward : get
Doctor o-- Patient : enroll
Patient --> Appointment : cancel
Health o-- Status
User --> Response : view
Patient --> Reminder : snooze
CareTeam --> Patient : remove
Survey o-- Response
Patient --> RecommendationArticle : save
CareTeam --> Information : input
Questionnaire o-- Response
Doctor --> App : use
Admin --> Entry : remove
Patient --> Reminder : add
DoctorUser <|-- User
Patient --> Status : track
CareTeam --> Recommendation : input
HealthcareExecutive --> Data : see
Patient --> Notification : get
Patient --> Appointment : reschedule
EducationContent --> Recovery : supported_by
Picture --> Difference : see
Patient --> Picture : take
Patient --> ContactInformation : see
Admin --> Database : access
Patient --> SmartphoneApp : install
Patient --> WebsiteInformation : see
Patient --> Access : have
Patient o-- Questionnaire : do
Admin --> Entry : add
Patient --> Task : complete
Patient --> Recommendation : receive
Patient --> Picture : compare
Application --> Username : use
User --> Amount : answer
User --> User : indicate
Doctor o-- User
Patient --> Reminder : remind
Doctor o-- Patient : register
Patient --> Confirmation : get
User --> TimeNotification : receive
Doctor --> Notification : get
CareTeam --> Patient : add
ContactInformation --> Server : save
HealthcareExecutive --> Trend : see
Doctor --> Prescription : modify
Doctor --> RecommendationArticle : provide
Patient --> Addition : add
User --> Task : complete
Application --> Password : use
Health o-- RecommendationArticle
Patient --> Amount : answer
App --> Appointment : do
EducationContent --> Preparation : supported_by

@enduml