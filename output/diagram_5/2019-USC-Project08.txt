@startuml
hide circle
class User<actor> {
	fingerprintScanner
}
class Doctor<actor> {
	patientHealth
}
class PatientUser<actor> {
	reminder
}
class DoctorUser<actor> {
	patient
}
class CareTeam<actor> {
	list
}
class Patient<actor> {
	healthstatus
	doctor
	timeline
	constraint
	recoveryprocess
	surgery
	questionnaire
}
class HealthcareExecutive<actor> {
}
class Hybrid<actor> {
}
class HealthcareExecutive {
	see()
	study()
}
class Patient {
	guide()
	dismiss()
	take()
	rate()
	miss()
	snooze()
	complete()
	need()
	fill()
	do()
	see()
	track()
	update()
	choose()
	access()
	save()
	install()
	add()
	receive()
	have()
	get()
	compare()
}
class Doctor {
	use()
	register()
	modify()
	get()
}
class CareTeam {
	add()
	input()
}
class Recommendation {
}
class PatientUser {
	receive()
	indicate()
	complete()
}
class History {
}
class Staff {
	enroll()
}
class Step {
}
class PatientHealth {
	decline()
}
class Surgery {
}
class Appointment {
}
class ContactInformation {
}
class Educationcontent {
	help()
}
class Preparation {
}
class App {
	do()
}
class Picture {
	see()
}
class Reminder {
}
class Addition {
}
class Instruction {
}
class Message {
}
class Resource {
}
class Book {
	reschedule()
}
class User {
	answer()
	login()
	have()
}
class Constraint {
}
class DoctorUser {
	view()
	check()
}
class Survey {
}
class Admin {
	add()
	remove()
	access()
}
class Healthstatus {
}
class Task {
}
class Confirmation {
}
class Healthrecommendationarticle {
}
class Ride {
}
class Prescription {
}
class Outcome {
}
class Recovery {
}
class Database {
}
class Notification {
}
class Reward {
}
class Backend {
}
class Questionnaire {
}
class SmartphoneApp {
}
class FingerprintScanner {
}
class Access {
}
class Information {
}
class TimeNotification {
}
class Entry {
}
class Amount {
}
class Application {
}
Patient --> Survey : fill
Educationcontent --> Recovery : help
Patient --> Access : have
PatientUser o-- Reminder : receive
Patient --> History : see
CareTeam --> Information : input
Book --> Appointment : reschedule
Patient o-- Healthstatus : track
Doctor --> App : use
DoctorUser --> Survey : view
PatientUser --> TimeNotification : receive
PatientUser --> PatientUser : indicate
Staff --> Step : enroll
Patient --> Task : complete
Patient --> Instruction : fill
Doctor --> Notification : get
Patient --> Picture : take
Admin --> Entry : remove
Patient --> Notification : get
Patient --> Message : get
PatientHealth --> Surgery : decline
Patient --> Confirmation : get
Patient --> Reward : get
User --> Amount : answer
Patient --> Resource : receive
PatientUser --> Appointment : receive
Patient --> Healthrecommendationarticle : save
User --> Application : login
Educationcontent --> Recovery : supported_by
Educationcontent --> Surgery : help
Admin --> Backend : remove
Patient --> ContactInformation : update
Patient --> Educationcontent : access
Patient --> Book : get
Patient --> App : take
Patient --> Addition : add
Patient --> Ride : get
Patient --> Appointment : miss
Staff --> Patient : enroll
PatientUser --> Task : complete
Patient --> Recommendation : receive
Patient o-- Questionnaire : do
Educationcontent --> Preparation : help
Doctor --> Prescription : modify
Patient o-- Constraint : see
Patient --> SmartphoneApp : install
Educationcontent --> Preparation : supported_by
Patient --> App : do
Patient --> Reminder : snooze
HealthcareExecutive --> Outcome : see
Patient --> Picture : compare
Admin --> Database : access
User o-- FingerprintScanner : login
Patient --> Reminder : add
CareTeam --> Recommendation : input

@enduml