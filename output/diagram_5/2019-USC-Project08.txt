@startuml
hide circle
class User<actor> {
	fingerprintScanner
	reminder
}
class Doctor<actor> {
	patienthealthdecline
}
class DoctorUser<actor> {
	patient
}
class CareTeam<actor> {
	list
}
class Patient<actor> {
	healthCenter
	constraint
	healthStatus
	surgery
	timeline
	questionnaire
	doctor
}
class Admin<actor> {
}
class HealthcareExecutive<actor> {
}
class HybridApp<actor> {
}
class Book {
	cancel()
}
class Health {
}
class Status {
}
class RecommendationArticle {
	provide()
}
class User {
	login()
	view()
	answer()
	indicate()
	receive()
	complete()
	check()
}
class Survey {
}
class ContactInformation {
	save()
}
class Server {
}
class Admin {
	access()
	add()
}
class Constraint {
	take()
}
class HealthcareExecutive {
	study()
	see()
}
class Trend {
}
class Patient {
	install()
	dismiss()
	snooze()
	save()
	track()
	answer()
	take()
	have()
	see()
	add()
	get()
	rate()
	receive()
	complete()
	guide()
	update()
	compare()
	doctor()
}
class Doctor {
	register()
	get()
	modify()
	user()
	doctor()
}
class SmartphoneApp {
}
class Recommendation {
}
class Reminder {
}
class Picture {
}
class Timenotification {
}
class Confirmation {
}
class Data {
}
class Amount {
}
class Addition {
}
class CareTeam {
	input()
	add()
}
class Information {
}
class History {
	take()
}
class Notification {
}
class Database {
}
class Reward {
}
class Task {
}
class Application {
	user()
}
class Username {
}
class Password {
}
class App {
}
class UpAppointment {
}
class Difference {
}
class Prescription {
}
class Medication {
	take()
}
class Access {
}
class Questionnaire {
}
class Educationcontent {
}
class Preparation {
}
class Recovery {
}
class DoctorUser {
}
User --> Survey : view
Patient --> Task : complete
Patient o-- Book
Patient --> Reminder : snooze
User --> User : indicate
ContactInformation --> Server : save
Patient o-- Questionnaire : doctor
Educationcontent --> Preparation : supported_by
Application --> Username : user
HealthcareExecutive --> Data : see
Application --> Password : user
User --> Amount : answer
Health o-- RecommendationArticle
Educationcontent --> Recovery : supported_by
HealthcareExecutive --> Trend : see
Doctor --> App : user
Patient --> Addition : add
Patient --> Amount : answer
Patient --> Confirmation : get
DoctorUser <|-- User
Doctor --> UpAppointment : doctor
CareTeam --> Information : input
Doctor o-- User
Patient --> SmartphoneApp : install
Patient --> Picture : take
Health o-- Status
Patient --> Recommendation : receive
Doctor --> Notification : get
Patient --> Difference : see
Patient --> Reminder : add
Patient --> Access : have
Admin --> Database : access
Doctor --> Prescription : modify
Patient --> Picture : compare
CareTeam --> Recommendation : input
Patient --> Reward : get
User --> Task : complete
User --> Timenotification : receive
Patient --> Status : track
Patient --> Notification : get

@enduml