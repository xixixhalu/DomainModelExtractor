@startuml
hide circle
class User<actor> {
	finances
	session
	information
	paymenthistory
	record
	sessionappointmenthistory
	messageHistory
	paymentmethod
}
class Expert<actor> {
	profile
	session
	note
	client
	paymenthistory
	record
	customer
	profileBio
	calendar
	status
}
class GuestUser<actor> {
	moneybelief
}
class User {
	view()
	rate()
	sign()
	search()
	update()
	manage()
	use()
	commit()
	pay()
	ask()
	access()
	see()
	select()
	have()
	receive()
	chat()
	take()
	authorize()
	schedule()
	sign_up()
	get()
}
class Calculator {
}
class Information {
}
class Expert {
	manage()
	view()
	keep()
	sign()
	set()
	authorize()
	give()
	receive()
	see()
	make()
	update()
	sign_up()
	store()
}
class Status {
}
class VideoStreamingLibrary {
	provide()
}
class Insight {
}
class Session {
}
class GuestUser {
	access()
	signup()
	take()
}
class Quiz {
	find()
}
class DemandAdvice {
}
class AppointmentSession {
	complete()
}
class Appointment {
}
class Feature {
}
class Sessionappointmenthistory {
}
class Note {
}
class Contentlibrary {
	provide()
}
class Rating {
}
class Budgeting {
}
class Profile {
}
class Gmail {
}
class Advice {
}
class Paymentmethod {
}
class MessageHistory {
}
class Video {
}
class History {
}
class Change {
}
class Paymenthistory {
}
class Time {
}
class List {
}
class Record {
}
class LinkedIn {
}
class ProfileBio {
}
class Article {
}
class Refund {
}
class Access {
}
class Topic {
}
class Blog {
}
class Assetmanagement {
}
class Facebook {
}
class Feedback {
}
class Emergency {
	be()
}
class Track {
}
class Payment {
}
class FinancialExpert {
}
class Online {
}
class Calendar {
}
class Notification {
}
User o-- Paymenthistory : see
Expert o-- Calendar : manage
User --> Advice : take
Expert --> Time : set
Expert o-- Payment : receive
User --> Expert : rate
User --> Expert : pay
GuestUser --> Quiz : take
User --> FinancialExpert : schedule
User --> Expert : manage
User --> Calculator : access
User --> Blog : get
Expert --> User : receive
User --> Gmail : sign
Expert o-- Paymenthistory : see
User o-- Information : see
User --> DemandAdvice : have
User --> List : search
User --> Video : get
Expert --> Online : set
User --> Profile : view
Expert --> Advice : give
Expert o-- Record : authorize
User o-- Record : authorize
User --> Calendar : use
User --> Appointment : manage
User --> Appointment : have
Expert --> User : give
User o-- Paymentmethod : update
AppointmentSession --> Expert : complete
Expert --> LinkedIn : sign
Expert --> Notification : receive
User --> Expert : supported_by
GuestUser --> Feature : access
User o-- MessageHistory : see
Contentlibrary --> Assetmanagement : provide
User --> FinancialExpert : supported_by
Expert o-- ProfileBio : update
User o-- Session : schedule
User --> Facebook : supported_by
User o-- Sessionappointmenthistory : see
User --> Video : search
User --> Facebook : sign
Expert --> User : supported_by
User --> Expert : chat
AppointmentSession --> Expert : supported_by
Expert o-- Note : store
User --> Article : search
User --> Expert : have
Contentlibrary --> Topic : provide
Expert --> Feedback : view
User --> Gmail : supported_by
Expert --> LinkedIn : supported_by
User --> Contentlibrary : access
User --> VideoStreamingLibrary : access
Expert o-- Status : set
Expert --> History : see
Expert --> Appointment : manage
User --> Refund : ask
Expert --> Rating : view
Expert --> Change : make
VideoStreamingLibrary --> Budgeting : provide
Expert --> Track : keep
User --> Access : get
VideoStreamingLibrary --> Insight : provide
User o-- Session : pay

@enduml