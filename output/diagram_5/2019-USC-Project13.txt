@startuml
hide circle
class Admin<actor> {
}
class Mentee<actor> {
}
class Mentor<actor> {
}
class User<actor> {
}
class Developer<actor> {
}
class Enduser<actor> {
}
class Administrator<actor> {
}
class Mentor {
	create()
	accept()
	submit()
	reset()
	update()
	mark()
	select()
	register()
	monitor()
	provide()
	report()
}
class TrainingPhaseActivity {
}
class Admin {
	track()
	assign()
	update()
	send()
	export()
	view()
	match()
	get()
}
class Report {
}
class ActivityReport {
}
class Interaction {
}
class Mentee {
	upload()
	reset()
	update()
	select()
	send()
	see()
}
class InformationDetail {
}
class Statistics {
}
class Detail {
}
class ContactDetail {
}
class Reminder {
}
class Password {
}
class List {
}
class Availability {
}
class User {
	access()
	update()
}
class Request {
	establish()
}
class Developer {
	integrate()
}
class WebApplication {
}
class Connection {
}
class Information {
	includes()
}
class Phone {
}
class Site {
}
class ActivityRecord {
}
class Status {
}
class Administrator {
	get()
}
Mentor --> Availability : mark
Mentor --> Request : accept
Mentor --> Report : submit
Admin --> Report : get
Admin --> Status : update
Admin --> Statistics : view
User --> Password : update
Mentor --> ActivityReport : provide
Admin --> Mentor : assign
Administrator --> Statistics : get
Mentee --> Request : send
Admin --> Mentee : track
Mentor --> Password : reset
Mentee --> Detail : upload
Admin --> Mentor : track
Admin --> Report : export
Mentor --> Interaction : report
Mentor --> Mentee : select
Developer --> WebApplication : integrate
Admin --> ActivityReport : view
Mentee --> ContactDetail : update
Request --> Connection : establish
Mentee --> InformationDetail : update
Admin --> Reminder : send
Information --> Phone : includes
Mentor --> Detail : register
Admin --> Mentor : match
User --> Site : access
Mentee --> Password : reset
Mentor --> Information : update
Mentee --> List : see
Mentee --> Mentor : select
Mentor --> TrainingPhaseActivity : monitor
Mentor --> ActivityRecord : create

@enduml