@startuml
hide circle
class Admin<actor> {
}
class Mentee<actor> {
	profile
	contactDetail
	informationDetail
	password
	criterion
	detail
}
class User<actor> {
}
class Developer<actor> {
}
class End<actor> {
}
class Administrator<actor> {
}
class Mentor {
	availability
	trainingPhaseActivity
	interaction
	information
	password
	mentee
	criterion
	detail
	send()
}
class Client {
	server
}
class Interaction {
}
class Admin {
	view()
	get()
	track()
	export()
	send()
	delete()
	assign()
	match()
	update()
	deactivate()
}
class Mentee {
	select()
	send()
	upload()
	see()
	opt_out()
	update()
	reset()
}
class Status {
}
class ContactDetail {
}
class Developer {
	integrate()
}
class Detail {
}
class Reminder {
}
class ActivityReport {
}
class Password {
}
class User {
	update()
}
class Report {
}
class Request {
	establish()
}
class Connection {
}
class WebApplication {
}
class Information {
	include()
}
class Photo {
}
class Administrator {
	get()
}
class Statistics {
}
class End {
	navigate()
}
class List {
}
Mentee o-- ContactDetail : update
Mentee o-- Request
Admin --> Report : export
Information o-- Detail
Admin --> Mentor : track
Admin --> Mentor : match
Mentor --> Report : send
Mentee o-- Detail : update
Admin --> User : deactivate
User --> Password : update
Admin --> Reminder : send
Information --> Photo : include
Admin --> ActivityReport : view
Admin --> User : delete
Mentee --> Mentor : select
Mentee o-- Password : reset
Administrator --> Statistics : get
Admin --> Statistics : view
Admin --> Report : get
Mentee --> List : see
Mentee o-- Detail : upload
Admin --> Mentor : assign
Admin --> Mentee : track
Mentee --> Request : send
Developer --> WebApplication : integrate
Mentor o-- Interaction
Admin --> Interaction : supported_by
Admin --> Status : update
Mentee o-- Interaction
Request --> Connection : establish
Mentor --> Mentee : to

@enduml